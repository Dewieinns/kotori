; ------------------------------------------
; Name:     Hiveeyes
; Date:     October 2015 - June 2016
; About:    A distributed monitoring platform collecting sensor data for the beekeeper community.
; Channel:  Transport: BERadio over RF69, MQTT and HTTP over TCP; Format: Bencode, JSON
; Storage:  InfluxDB
; See also: https://getkotori.org/docs/applications/hiveeyes.html
;           https://hiveeyes.org/docs/system/
; ------------------------------------------

[hiveeyes]
enable      = true
type        = vendor
realm       = hiveeyes
mqtt_topics = hiveeyes/#


[hiveeyes.http-acquisition]
enable          = true

type            = application
application     = kotori.io.protocol.forwarder:boot

realm           = hiveeyes
source          = http:/api/hiveeyes/{address:.*}/data
target          = mqtt:/hiveeyes/{address}/message-json


[hiveeyes.firmware-from-git]
enable          = true

type            = application
application     = kotori.firmware.service:boot

realm           = hiveeyes
source          = http:/api/hiveeyes/{HE_USER:.*}/{HE_SITE:.*}/{HE_HIVE:.*}/firmware.{suffix}
repository      = git@git.elmyra.de:hiveeyes/arduino.git
patch_files     = *.ino, *.pde, *.cpp, *.h, Makefile*

# TODO: Send notification via MQTT
#notify          = mqtt:/hiveeyes/{address}/firmware

