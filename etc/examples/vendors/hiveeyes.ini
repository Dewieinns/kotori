; ------------------------------------------
; Name:     Hiveeyes
; Date:     October 2015 - ongoing
; About:    A distributed monitoring platform collecting sensor data for the beekeeper community.
; Channel:  Transport: BERadio over RF69, MQTT and HTTP over TCP; Format: Bencode, JSON
; Storage:  InfluxDB
; See also: https://getkotori.org/docs/applications/hiveeyes.html
;           https://hiveeyes.org/docs/system/
; ------------------------------------------


; -----------------------------
; Data acquisition through MQTT
; -----------------------------
[hiveeyes]
enable      = true
type        = vendor
realm       = hiveeyes
mqtt_topics = hiveeyes/#


; --------------------------------------------------------------------
; Data acquisition through HTTP
; https://getkotori.org/docs/handbook/acquisition/protocol/http.html
; https://getkotori.org/docs/applications/forwarders/http-to-mqtt.html
; --------------------------------------------------------------------
[hiveeyes.http-acquisition]
enable          = true

type            = application
application     = kotori.io.protocol.forwarder:boot

realm           = hiveeyes
source          = http:/api/hiveeyes/{address:.*}/{slot:(data|event)} [POST]
target          = mqtt:/hiveeyes/{address}/{slot}.json


; ----------------------------------------------------------------------
; Data export
; https://getkotori.org/docs/handbook/export/
; https://getkotori.org/docs/applications/forwarders/http-to-influx.html
; ----------------------------------------------------------------------
[hiveeyes.data-export]
; See also:
enable          = true

type            = application
application     = kotori.io.protocol.forwarder:boot

realm           = hiveeyes
source          = http:/api/{realm:hiveeyes}/{network:.*}/{gateway:.*}/{node:.*}/{slot:(data|event)}.{suffix} [GET]
target          = influxdb:/{database}?measurement={measurement}
transform       = kotori.daq.intercom.strategies:WanBusStrategy.topology_to_storage,
                  kotori.io.protocol.influx:QueryTransformer.transform


; -----------------------------------------------------
; Firmware builder
; https://getkotori.org/docs/applications/firmware.html
; -----------------------------------------------------
[hiveeyes.firmware-builder]
enable          = true

type            = application
application     = kotori.firmware.service:boot

realm           = hiveeyes
source          = http:/api/hiveeyes/{HE_USER:.*}/{HE_SITE:.*}/{HE_HIVE:.*}/{slot:firmware}.{suffix} [POST]
repository      = https://github.com/hiveeyes/arduino
esp_root        = /opt/esp8266-arduino
patch_files     = *.ino, *.pde, *.cpp, *.h, Makefile*

# Local development
#repository      = /Users/amo/dev/hiveeyes/sources/arduino/.git
#esp_root        = /Users/amo/dev/hiveeyes/sdk/esp8266-arduino

# TODO: Send notification via MQTT
#notify          = mqtt:/hiveeyes/{address}/firmware

